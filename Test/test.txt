{
    CLASS ca {
        USHORT a, *{ declaracion de atributo }*
        VOID m(USHORT z) { *{ declaracion de metodo }*
            IF (z !! 0_us) { *{Esta linea debe dar un error sintactico, no es posible hacer asignaciones en una condicion. Corregir si se quiere probar esta funcionalidad}*
                a = z + 5_us,
            }
            END_IF,
            RETURN,
        },
    }

    CLASS cb {
        USHORT b, *{ declaracion de atributo }*
        VOID n() { *{ declaracion de metodo }*
            IF (b !! 0_us) {
                b = 5_us * b,
            }
            END_IF,
            RETURN,
        },
    }

    CLASS cc {
        cb, *{ nombre de la clase }*
        ca, *{ nombre de la clase }*
        FLOAT c, *{ declaracion de atributo }*
        FLOAT d, *{ declaracion de atributo }*

    }

    *{ declaracion de objetos de una clase }*
    ca a1,
    cb b1,
    cc c1,

    *{ referencias a metodos y atributos de una clase }*
    a1.a = 3_us,
    b1.b = 9_us * 1_us,
    c1.b = b1.b,
    c1.c = 1.2,
    c1.a = 2_us,

    a1.m(b1.b),


    IF (b1.b !! 5_us) {
        PRINT a1.a,
    } END_IF,
}

*{


        CLASS clase {
            USHORT b,
            VOID func() {
              IF (b == 8_us) {
                  PRINT # LLEGUE #,
              } ELSE {
                  PRINT # NO LLEGUE #,
              }
              END_IF,

              RETURN,
            },
        }

    clase obj,
    obj.b = 2_us,

    WHILE (obj.b <= 8_us) DO {
        obj.b = obj.b * 2_us,
        PRINT obj.b,
        obj.func(),
    },


    LONG a,
    a = 3_l * obj.b,

    USHORT p,

    WHILE (obj.b <= 8_us) DO {
        obj.b = obj.b * 2_us,

        p = 9_us,
        p = p + 4_us,

        PRINT obj.b,
        obj.func(),
    },

    USHORT d,
    d = 3_us,

    c = d * obj.b,

    IF (obj.b < 5_us) {
        obj.b = 6_us,
    } END_IF,

    d = d / c,
    LONG e,
    e = 7_us,
    d = e,


}*